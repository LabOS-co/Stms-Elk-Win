version: '3.7'
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.4.0
    container_name: elasticsearch1
    healthcheck:
        test: ["CMD-SHELL", "curl --silent --fail localhost:9201/_cluster/health || exit 1"]
        interval: 30s
        timeout: 30s
        retries: 4
    restart: always
    environment:
      - node.name=elasticsearch1
      - cluster.name=docker-cluster
      - cluster.initial_master_nodes=elasticsearch1
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1G -Xmx1G"
      - http.cors.enabled=true
      - http.cors.allow-origin=*
      - network.host=_eth0_
      - http.port=9201
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
      nproc: 65535
      memlock:
        soft: -1
        hard: -1
    cap_add:
      - ALL
    # privileged: true
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 10s
    volumes:
      - type: volume
        source: logs
        target: /var/log
      - type: volume
        source: esdata1
        target: /usr/share/elasticsearch/data
    networks:
      - elastic
    ports:
      - 9201:9201
      - 9300:9300
  elasticsearch2:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.4.0
    container_name: elasticsearch2
    healthcheck:
        test: ["CMD-SHELL", "curl --silent --fail localhost:9202/_cluster/health || exit 1"]
        interval: 30s
        timeout: 30s
        retries: 4
    restart: always
    environment:
      - node.name=elasticsearch2
      - cluster.name=docker-cluster
      - cluster.initial_master_nodes=elasticsearch1
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms2G -Xmx2G"
      - "discovery.zen.ping.unicast.hosts=elasticsearch1"
      - http.cors.enabled=true
      - http.cors.allow-origin=*
      - network.host=_eth0_
      - http.port=9202
    ulimits:
      nproc: 65535
      nofile:
        soft: 65536
        hard: 65536
      memlock:
        soft: -1
        hard: -1
    cap_add:
      - ALL
    # privileged: true
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 10s
    volumes:
      - type: volume
        source: logs
        target: /var/log
      - type: volume
        source: esdata2
        target: /usr/share/elasticsearch/data
    depends_on:
      - elasticsearch
    networks:
      - elastic
    ports:
      - 9202:9202
  elasticsearch3:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.4.0
    container_name: elasticsearch3
    healthcheck:
        test: ["CMD-SHELL", "curl --silent --fail localhost:9203/_cluster/health || exit 1"]
        interval: 30s
        timeout: 30s
        retries: 4
    restart: always
    environment:
      - node.name=elasticsearch3
      - cluster.name=docker-cluster
      - cluster.initial_master_nodes=elasticsearch1
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms2G -Xmx2G"
      - "discovery.zen.ping.unicast.hosts=elasticsearch1"
      - http.cors.enabled=true
      - http.cors.allow-origin=*
      - network.host=_eth0_
      - http.port=9203
    ulimits:
      nproc: 65535
      nofile:
        soft: 65536
        hard: 65536
      memlock:
        soft: -1
        hard: -1
    cap_add:
      - ALL
    # privileged: true
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 10s
    volumes:
      - type: volume
        source: logs
        target: /var/log
      - type: volume
        source: esdata3
        target: /usr/share/elasticsearch/data
    depends_on:
      - elasticsearch
      - elasticsearch2
    networks:
      - elastic
    ports:
      - 9203:9203
  logstash:
    image: docker.elastic.co/logstash/logstash:7.4.0
    container_name: logstash
    ulimits:
      nproc: 65535
      memlock:
        soft: -1
        hard: -1
    cap_add:
      - ALL
    # privileged: true
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 10s
    restart: always
    environment:
      - "LS_JAVA_OPTS=-Xmx2G -Xms2G"
      - "PIPELINE_WORKERS=4"
      - xpack.monitoring.elasticsearch.hosts=http://nginx:9200
    volumes:
      - ${PWD}/logstash/config/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    depends_on:
      - elasticsearch
      - elasticsearch2
      - elasticsearch3
    networks:
      - elastic
    #ports:
     # - 5014:5014/udp
  logstash2:
    image: docker.elastic.co/logstash/logstash:7.4.0
    container_name: logstash2
    ulimits:
      nproc: 65535
      memlock:
        soft: -1
        hard: -1
    cap_add:
      - ALL
    # privileged: true
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 10s
    restart: always
    environment:
      - "LS_JAVA_OPTS=-Xmx1G -Xms1G"
      - "PIPELINE_WORKERS=4"
      - xpack.monitoring.elasticsearch.hosts=http://nginx:9200
    volumes:
      - ${PWD}/logstash/config/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    depends_on:
      - elasticsearch
      - elasticsearch2
      - elasticsearch3
    networks:
      - elastic
    #ports:
      #- 5015:5014/udp
  logstash3:
    image: docker.elastic.co/logstash/logstash:7.4.0
    container_name: logstash3
    ulimits:
      nproc: 65535
      memlock:
        soft: -1
        hard: -1
    cap_add:
      - ALL
    # privileged: true
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 10s
    restart: always
    environment:
      - "LS_JAVA_OPTS=-Xmx1G -Xms1G"
      - "PIPELINE_WORKERS=4"
      - xpack.monitoring.elasticsearch.hosts=http://nginx:9200
    volumes:
      - ${PWD}/logstash/config/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    depends_on:
      - elasticsearch
      - elasticsearch2
      - elasticsearch3
    networks:
      - elastic
    #ports:
      #- 5016:5014/udp
  kibana:
    image: docker.elastic.co/kibana/kibana:7.4.0
    container_name: kibana
    restart: always
    environment:
      SERVER_NAME: localhost
      ELASTICSEARCH_HOSTS: http://elasticsearch:9201
      ELASTICSEARCH_HOSTS: http://elasticsearch2:9202
      ELASTICSEARCH_HOSTS: http://elasticsearch3:9203
      elasticsearch.url:   http://nginx:9200
      elasticsearch.hosts: http://nginx:9200
      xpack.monitoring.enabled: "true"
      xpack.reporting.enabled: "true"
      xpack.monitoring.collection.enabled: "true" 
    ports:
      - 5601:5601
    volumes:
      - type: volume
        source: logs
        target: /var/log
    ulimits:
      nproc: 65535
      memlock:
        soft: -1
        hard: -1
    cap_add:
      - ALL
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      resources:
        limits:
          cpus: '1'
          memory: 256M
        reservations:
          cpus: '1'
          memory: 256M
      restart_policy:
        condition: on-failure
        delay: 30s
        max_attempts: 3
        window: 120s
    depends_on:
      - elasticsearch
      - elasticsearch2
      - elasticsearch3
      - logstash
    networks:
      - elastic
  nginx:
    image: nginx:latest
    ports:
        - 9200:9200
        - 514:514/udp
    restart: always
    volumes:
        - ${PWD}/nginx-config/nginx.conf:/etc/nginx/nginx.conf
    command: /bin/bash -c "nginx -g 'daemon off;'"
    ulimits:
      nproc: 65535
    depends_on:
      - elasticsearch
      - elasticsearch2
      - elasticsearch3
      - logstash
      - kibana
    networks:
      - elastic
  run-script:
    image: bash:latest
    restart: on-failure
    volumes:
     - ${PWD}/script.sh:/script.sh
     - ${PWD}/index_template.cfg:/index_template.cfg
     - ${PWD}/wait_for_es.sh:/wait_for_es.sh
    command: [bash,"./wait_for_es.sh","http://elasticsearch:9201","--",bash,"./script.sh"]
    ulimits:
      nproc: 65535
    depends_on:
      - elasticsearch
      - elasticsearch2
      - elasticsearch3
      - logstash
      - kibana
      - nginx
    networks:
      - elastic
           
volumes:
  esdata1:
  esdata2:
  esdata3:
  logs:
networks:
  elastic:

# configs:
#   auditbeat_config:
#     file: configs/auditbeat.docker.yml
#   filebeat_config:
#     file: configs/filebeat.docker.yml
#   heartbeat_config:
#     file: configs/heartbeat.docker.yml
#   metricbeat_config:
#     file: configs/metricbeat.docker.yml
#   packetbeat_config:
#     file: configs/packetbeat.docker.yml
