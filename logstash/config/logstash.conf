input { 
	tcp {
		port => 514
		type => syslog
	}
	udp {
		port => 514
		queue_size => 99000
		type => syslog
	}
}
filter {
  if [type] == "syslog" {

	grok {
		match => { "message" => "<%{POSINT:syslog_pri}>%{WORD:facility_label}?:+(\[(?<ver>[0-9]+)\] )?%{GREEDYDATA:perver_message}" }
	} 
	if [ver] == "1" or ![ver] {
		grok {		
			match => { "perver_message" => "%{NUMBER:duration} %{WORD:priority} %{WORD:logger_name}?:%{NUMBER:threadId} %{NUMBER:pid} %{WORD:session}(\|(?<session_code>\b\w+\b))? %{WORD:service} %{GREEDYDATA:site} %{NUMBER:seq} \[%{NUMBER:error_code}\] (?<error_text>.+?(?= - )) %{GREEDYDATA:syslog_message}" }
			remove_field => [ "ver" ]			
		}
	}
	else {
		mutate {		
			replace => { "ver" => "Unsupported log message." }		
		}
	}
	
	mutate {
		#remove_field => [ "message" ]
		remove_field => [ "perver_message" ]
	    remove_field => [ "facility_label" ]
	}  

	if [error_code] == "50000" {
		grok {
			match => { "syslog_message" => "- Starting session=%{POSINT:csrv_session}, Application=%{GREEDYDATA:application_path}, Build=(%{WORD:build}.+?(?=, ))?, IP=%{IPV4}?, OS user name=%{USERNAME:user_name}, Label=%{QUOTEDSTRING:label},( Arguments=%{GREEDYDATA:Arguments},)? BuildType=%{GREEDYDATA:BuildType}" }	
		} 	
	}
	else if [error_code] == "50002" {
		grok {
			match => { "syslog_message" => "- Connection parameters: server name - %{HOSTNAME:DB_server} ,db name - %{WORD:DB_name}" }	
		} 	
	}
	else if [error_code] == "50003" {
		grok {
			match => { "syslog_message" => "- \w*RequestActivator\:\:Activate Completed for %{WORD} which took\s+<?%{NUMBER:service_duration}" }	
		} 	
	}
	else if [error_code] == "50004" {
		grok {
			match => { "syslog_message" => "- \[%{USERNAME:DB_name}\] \[%{NUMBER:query_duration}\] %{GREEDYDATA:query_string}" }	
		} 	
		mutate {
			replace => { "syslog_message" => "%{query_string}" }
			remove_field => [ "query_string" ]
		}
		ruby {
			code => 'event.set("query_duration",event.get("query_duration").to_f * 100)'
		}
	}
	else if [error_code] == "50017" {
		grok {
			match => { "syslog_message" => "%{GREEDYDATA:query_string} - Duration: %{NUMBER:query_duration}" }	
		} 	
		mutate {
			replace => { "syslog_message" => "%{query_string}" }
			remove_field => [ "query_string" ]
		}
		ruby {
			code => 'event.set("query_duration",event.get("query_duration").to_f * 100)'
		}
	}
	

  }
  	mutate {
	  remove_field => [ "type" ]
	}

  
  if [host] == "127.0.0.1" {
	  ruby {
		init => "require 'socket'"
		code => "event.set('host', Socket.gethostname)"
	  }
  }
  
}

output {
  elasticsearch {
    hosts => ["AHLABLOG01:9200"] #nginx
	ilm_enabled => "false"
  }
	#stdout {codec => rubydebug }
}
